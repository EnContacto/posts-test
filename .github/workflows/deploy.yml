- name: Deploy Docker Containers on EC2
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: "us-east-1"
  DYNAMODB_TABLE: "${{ secrets.DYNAMODB_TABLE }}"
  S3_BUCKET: ${{ secrets.S3_BUCKET }}
  REDIS_HOST: ${{ secrets.REDIS_HOST }}
  REDIS_PORT: "6379"
run: |
  ssh -i ~/.ssh/id_rsa ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
    echo "Verificando variables de entorno..."
    echo "AWS_REGION=${AWS_REGION}"
    echo "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}"
    echo "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}"
    echo "DYNAMODB_TABLE=${DYNAMODB_TABLE}"
    echo "S3_BUCKET=${S3_BUCKET}"
    echo "REDIS_HOST=${REDIS_HOST}"
    echo "REDIS_PORT=${REDIS_PORT}"

    # Si DYNAMODB_TABLE está vacío, asignar un valor predeterminado
    if [[ -z "${DYNAMODB_TABLE}" ]]; then
      export DYNAMODB_TABLE="PostsTable"
      echo "DYNAMODB_TABLE no estaba definido, usando valor predeterminado: ${DYNAMODB_TABLE}"
    fi

    echo "Stopping and removing existing containers..."
    sudo docker stop createpost deletepost getpost updatepost || echo "No running containers to stop."
    sudo docker rm createpost deletepost getpost updatepost || echo "No existing containers to remove."

    echo "Pulling latest Docker images..."
    sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/app:createpost-latest
    sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/app:getpost-latest
    sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/app:updatepost-latest
    sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/app:deletepost-latest

    echo "Running containers with the latest images and environment variables..."
    export AWS_REGION="us-east-1"

    sudo docker run -d -p 3001:3000 --name createpost \
      -e AWS_ACCESS_KEY_ID="${AWS_ACCESS_KEY_ID}" \
      -e AWS_SECRET_ACCESS_KEY="${AWS_SECRET_ACCESS_KEY}" \
      -e AWS_REGION="us-east-1" \
      -e DYNAMODB_TABLE="${DYNAMODB_TABLE}" \
      -e S3_BUCKET="${S3_BUCKET}" \
      -e REDIS_HOST="${REDIS_HOST}" \
      -e REDIS_PORT="${REDIS_PORT}" \
      ${{ secrets.DOCKERHUB_USERNAME }}/app:createpost-latest

    sudo docker run -d -p 3002:3000 --name deletepost \
      -e AWS_ACCESS_KEY_ID="${AWS_ACCESS_KEY_ID}" \
      -e AWS_SECRET_ACCESS_KEY="${AWS_SECRET_ACCESS_KEY}" \
      -e AWS_REGION="us-east-1" \
      -e DYNAMODB_TABLE="${DYNAMODB_TABLE}" \
      -e S3_BUCKET="${S3_BUCKET}" \
      -e REDIS_HOST="${REDIS_HOST}" \
      -e REDIS_PORT="${REDIS_PORT}" \
      ${{ secrets.DOCKERHUB_USERNAME }}/app:deletepost-latest

    sudo docker run -d -p 3003:3000 --name getpost \
      -e AWS_ACCESS_KEY_ID="${AWS_ACCESS_KEY_ID}" \
      -e AWS_SECRET_ACCESS_KEY="${AWS_SECRET_ACCESS_KEY}" \
      -e AWS_REGION="us-east-1" \
      -e DYNAMODB_TABLE="${DYNAMODB_TABLE}" \
      -e S3_BUCKET="${S3_BUCKET}" \
      -e REDIS_HOST="${REDIS_HOST}" \
      -e REDIS_PORT="${REDIS_PORT}" \
      ${{ secrets.DOCKERHUB_USERNAME }}/app:getpost-latest

    sudo docker run -d -p 3004:3000 --name updatepost \
      -e AWS_ACCESS_KEY_ID="${AWS_ACCESS_KEY_ID}" \
      -e AWS_SECRET_ACCESS_KEY="${AWS_SECRET_ACCESS_KEY}" \
      -e AWS_REGION="us-east-1" \
      -e DYNAMODB_TABLE="${DYNAMODB_TABLE}" \
      -e S3_BUCKET="${S3_BUCKET}" \
      -e REDIS_HOST="${REDIS_HOST}" \
      -e REDIS_PORT="${REDIS_PORT}" \
      ${{ secrets.DOCKERHUB_USERNAME }}/app:updatepost-latest
  EOF
