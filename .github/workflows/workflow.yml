name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push CreatePost Image
        run: |
          docker build --no-cache -t ${{ secrets.DOCKERHUB_USERNAME }}/app:createpost-latest ./createPost
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/app:createpost-latest

      - name: Build and Push GetPost Image
        run: |
          docker build --no-cache -t ${{ secrets.DOCKERHUB_USERNAME }}/app:getpost-latest ./getPost
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/app:getpost-latest

      - name: Build and Push UpdatePost Image
        run: |
          docker build --no-cache -t ${{ secrets.DOCKERHUB_USERNAME }}/app:updatepost-latest ./updatePost
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/app:updatepost-latest

      - name: Build and Push DeletePost Image
        run: |
          docker build --no-cache -t ${{ secrets.DOCKERHUB_USERNAME }}/app:deletepost-latest ./deletePost
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/app:deletepost-latest

  setup_ec2:
    name: Configure EC2 Instance
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Set up SSH Key
        run: |
          echo "üõ† Setting up SSH key..."
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts

      - name: üîç Verify SSH Key Exists
        run: |
          echo "üîπ Checking SSH key file..."
          ls -lah ~/.ssh/id_rsa || echo "‚ùå SSH key file not found!"
          echo "üîπ Checking key permissions..."
          ls -l ~/.ssh/id_rsa || echo "‚ùå SSH key file not accessible!"

      - name: Verify SSH Access
        run: |
          echo "üîç Testing SSH connection..."
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUBLIC_IP }} "echo '‚úÖ SSH Connection Successful'"

  deploy_ec2:
    name: Deploy Docker Containers
    runs-on: ubuntu-latest
    needs: setup_ec2

    steps:
      - name: Deploy Containers on EC2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-east-1"
          DYNAMODB_TABLE: "${{ secrets.DYNAMODB_TABLE }}"
          S3_BUCKET: "${{ secrets.S3_BUCKET }}"
        run: |
          ssh -i ~/.ssh/id_rsa ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            echo "‚úÖ Connected to EC2 Instance"

            echo "Stopping and removing existing containers if running..."
            for service in createpost deletepost getpost updatepost; do
              if sudo docker ps -a --format '{{.Names}}' | grep -q "^$service\$"; then
                sudo docker stop $service
                sudo docker rm $service
              fi
            done

            echo "üì• Pulling latest Docker images..."
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/app:createpost-latest
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/app:getpost-latest
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/app:updatepost-latest
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/app:deletepost-latest

            echo "üîç Verifying and setting default environment variables..."
            if [[ -z "${DYNAMODB_TABLE}" ]]; then
              export DYNAMODB_TABLE="PostsTable"
              echo "DYNAMODB_TABLE not set, using default: ${DYNAMODB_TABLE}"
            fi

            if [[ -z "${S3_BUCKET}" ]]; then
              export S3_BUCKET="distribuidabucketsocial"
              echo "S3_BUCKET not set, using default: ${S3_BUCKET}"
            fi

            echo "üöÄ Running containers with the latest images..."
            services=(
              "createpost:3001:${{ secrets.DOCKERHUB_USERNAME }}/app:createpost-latest"
              "deletepost:3002:${{ secrets.DOCKERHUB_USERNAME }}/app:deletepost-latest"
              "getpost:3003:${{ secrets.DOCKERHUB_USERNAME }}/app:getpost-latest"
              "updatepost:3004:${{ secrets.DOCKERHUB_USERNAME }}/app:updatepost-latest"
            )

            for service in "${services[@]}"; do
              IFS=":" read -r name port image <<< "$service"
              sudo docker run -d -p $port:3000 --name $name \
                --restart always \
                -e AWS_ACCESS_KEY_ID="${AWS_ACCESS_KEY_ID}" \
                -e AWS_SECRET_ACCESS_KEY="${AWS_SECRET_ACCESS_KEY}" \
                -e AWS_REGION="us-east-1" \
                -e DYNAMODB_TABLE="${DYNAMODB_TABLE}" \
                -e S3_BUCKET="${S3_BUCKET}" \
                $image
            done

            echo "‚úÖ Deployment complete!"
          EOF
